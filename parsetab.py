
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN ATE DIVIDE ENQUANTO EQUALS FALSO FIM GE GT ID IMPRIME INICIO LBRACE LE LPAREN LT MINUS NEQUALS NOT NUMBER OR PARA PLUS RBRACE RPAREN SE SEMICOLON SENAO STRING TIMES VARIAVEL VERDADEIROprogram : INICIO statements FIMstatements : statement\n    | statements statementstatement : var_declaration\n    | assignment\n    | if_statement\n    | while_loop\n    | for_loop\n    | print_statementvar_declaration : VARIAVEL ID SEMICOLONassignment : ID ASSIGN expression SEMICOLONexpression : expression PLUS term\n    | expression MINUS term\n    | termterm : term TIMES factor\n    | term DIVIDE factor\n    | factorfactor : NUMBERfactor : STRINGfactor : VERDADEIRO\n    | FALSOfactor : IDcondition : expression comparison_operator expression\n    | NOT condition\n    | LPAREN condition RPARENcomparison_operator : EQUALS\n    | NEQUALS\n    | LT\n    | GT\n    | LE\n    | GEif_statement : SE condition bloco optional_elseoptional_else : SENAO bloco\n    | emptywhile_loop : ENQUANTO condition blocofor_loop : PARA ID ASSIGN expression ATE expression blocobloco : LBRACE statements RBRACEprint_statement : IMPRIME expression SEMICOLONempty :'
    
_lr_action_items = {'INICIO':([0,],[2,]),'$end':([1,17,],[0,-1,]),'VARIAVEL':([2,3,4,5,6,7,8,9,10,18,35,37,38,52,54,55,56,58,59,67,68,71,],[11,11,-2,-4,-5,-6,-7,-8,-9,-3,-10,-39,11,-35,-38,-11,-32,-34,11,-33,-37,-36,]),'ID':([2,3,4,5,6,7,8,9,10,11,13,14,15,16,18,20,23,24,35,37,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,58,59,67,68,69,71,],[12,12,-2,-4,-5,-6,-7,-8,-9,19,31,31,33,31,-3,31,31,31,-10,-39,12,31,31,31,-26,-27,-28,-29,-30,-31,31,31,-35,31,-38,-11,-32,-34,12,-33,-37,31,-36,]),'SE':([2,3,4,5,6,7,8,9,10,18,35,37,38,52,54,55,56,58,59,67,68,71,],[13,13,-2,-4,-5,-6,-7,-8,-9,-3,-10,-39,13,-35,-38,-11,-32,-34,13,-33,-37,-36,]),'ENQUANTO':([2,3,4,5,6,7,8,9,10,18,35,37,38,52,54,55,56,58,59,67,68,71,],[14,14,-2,-4,-5,-6,-7,-8,-9,-3,-10,-39,14,-35,-38,-11,-32,-34,14,-33,-37,-36,]),'PARA':([2,3,4,5,6,7,8,9,10,18,35,37,38,52,54,55,56,58,59,67,68,71,],[15,15,-2,-4,-5,-6,-7,-8,-9,-3,-10,-39,15,-35,-38,-11,-32,-34,15,-33,-37,-36,]),'IMPRIME':([2,3,4,5,6,7,8,9,10,18,35,37,38,52,54,55,56,58,59,67,68,71,],[16,16,-2,-4,-5,-6,-7,-8,-9,-3,-10,-39,16,-35,-38,-11,-32,-34,16,-33,-37,-36,]),'FIM':([3,4,5,6,7,8,9,10,18,35,37,52,54,55,56,58,67,68,71,],[17,-2,-4,-5,-6,-7,-8,-9,-3,-10,-39,-35,-38,-11,-32,-34,-33,-37,-36,]),'RBRACE':([4,5,6,7,8,9,10,18,35,37,52,54,55,56,58,59,67,68,71,],[-2,-4,-5,-6,-7,-8,-9,-3,-10,-39,-35,-38,-11,-32,-34,68,-33,-37,-36,]),'ASSIGN':([12,33,],[20,53,]),'NOT':([13,14,23,24,],[23,23,23,23,]),'LPAREN':([13,14,23,24,],[24,24,24,24,]),'NUMBER':([13,14,16,20,23,24,39,40,41,42,43,44,45,46,47,50,51,53,69,],[27,27,27,27,27,27,27,27,27,-26,-27,-28,-29,-30,-31,27,27,27,27,]),'STRING':([13,14,16,20,23,24,39,40,41,42,43,44,45,46,47,50,51,53,69,],[28,28,28,28,28,28,28,28,28,-26,-27,-28,-29,-30,-31,28,28,28,28,]),'VERDADEIRO':([13,14,16,20,23,24,39,40,41,42,43,44,45,46,47,50,51,53,69,],[29,29,29,29,29,29,29,29,29,-26,-27,-28,-29,-30,-31,29,29,29,29,]),'FALSO':([13,14,16,20,23,24,39,40,41,42,43,44,45,46,47,50,51,53,69,],[30,30,30,30,30,30,30,30,30,-26,-27,-28,-29,-30,-31,30,30,30,30,]),'SEMICOLON':([19,25,26,27,28,29,30,31,34,36,61,62,64,65,],[35,-14,-17,-18,-19,-20,-21,-22,54,55,-12,-13,-15,-16,]),'LBRACE':([21,25,26,27,28,29,30,31,32,48,57,60,61,62,63,64,65,70,],[38,-14,-17,-18,-19,-20,-21,-22,38,-24,38,-23,-12,-13,-25,-15,-16,38,]),'PLUS':([22,25,26,27,28,29,30,31,34,36,60,61,62,64,65,66,70,],[40,-14,-17,-18,-19,-20,-21,-22,40,40,40,-12,-13,-15,-16,40,40,]),'MINUS':([22,25,26,27,28,29,30,31,34,36,60,61,62,64,65,66,70,],[41,-14,-17,-18,-19,-20,-21,-22,41,41,41,-12,-13,-15,-16,41,41,]),'EQUALS':([22,25,26,27,28,29,30,31,61,62,64,65,],[42,-14,-17,-18,-19,-20,-21,-22,-12,-13,-15,-16,]),'NEQUALS':([22,25,26,27,28,29,30,31,61,62,64,65,],[43,-14,-17,-18,-19,-20,-21,-22,-12,-13,-15,-16,]),'LT':([22,25,26,27,28,29,30,31,61,62,64,65,],[44,-14,-17,-18,-19,-20,-21,-22,-12,-13,-15,-16,]),'GT':([22,25,26,27,28,29,30,31,61,62,64,65,],[45,-14,-17,-18,-19,-20,-21,-22,-12,-13,-15,-16,]),'LE':([22,25,26,27,28,29,30,31,61,62,64,65,],[46,-14,-17,-18,-19,-20,-21,-22,-12,-13,-15,-16,]),'GE':([22,25,26,27,28,29,30,31,61,62,64,65,],[47,-14,-17,-18,-19,-20,-21,-22,-12,-13,-15,-16,]),'RPAREN':([25,26,27,28,29,30,31,48,49,60,61,62,63,64,65,],[-14,-17,-18,-19,-20,-21,-22,-24,63,-23,-12,-13,-25,-15,-16,]),'ATE':([25,26,27,28,29,30,31,61,62,64,65,66,],[-14,-17,-18,-19,-20,-21,-22,-12,-13,-15,-16,69,]),'TIMES':([25,26,27,28,29,30,31,61,62,64,65,],[50,-17,-18,-19,-20,-21,-22,50,50,-15,-16,]),'DIVIDE':([25,26,27,28,29,30,31,61,62,64,65,],[51,-17,-18,-19,-20,-21,-22,51,51,-15,-16,]),'SENAO':([37,68,],[57,-37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([2,38,],[3,59,]),'statement':([2,3,38,59,],[4,18,4,18,]),'var_declaration':([2,3,38,59,],[5,5,5,5,]),'assignment':([2,3,38,59,],[6,6,6,6,]),'if_statement':([2,3,38,59,],[7,7,7,7,]),'while_loop':([2,3,38,59,],[8,8,8,8,]),'for_loop':([2,3,38,59,],[9,9,9,9,]),'print_statement':([2,3,38,59,],[10,10,10,10,]),'condition':([13,14,23,24,],[21,32,48,49,]),'expression':([13,14,16,20,23,24,39,53,69,],[22,22,34,36,22,22,60,66,70,]),'term':([13,14,16,20,23,24,39,40,41,53,69,],[25,25,25,25,25,25,25,61,62,25,25,]),'factor':([13,14,16,20,23,24,39,40,41,50,51,53,69,],[26,26,26,26,26,26,26,26,26,64,65,26,26,]),'bloco':([21,32,57,70,],[37,52,67,71,]),'comparison_operator':([22,],[39,]),'optional_else':([37,],[56,]),'empty':([37,],[58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INICIO statements FIM','program',3,'p_program','parser.py',10),
  ('statements -> statement','statements',1,'p_statements','parser.py',15),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',16),
  ('statement -> var_declaration','statement',1,'p_statement','parser.py',24),
  ('statement -> assignment','statement',1,'p_statement','parser.py',25),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',26),
  ('statement -> while_loop','statement',1,'p_statement','parser.py',27),
  ('statement -> for_loop','statement',1,'p_statement','parser.py',28),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',29),
  ('var_declaration -> VARIAVEL ID SEMICOLON','var_declaration',3,'p_var_declaration','parser.py',34),
  ('assignment -> ID ASSIGN expression SEMICOLON','assignment',4,'p_assignment','parser.py',43),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser.py',52),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser.py',53),
  ('expression -> term','expression',1,'p_expression','parser.py',54),
  ('term -> term TIMES factor','term',3,'p_term','parser.py',65),
  ('term -> term DIVIDE factor','term',3,'p_term','parser.py',66),
  ('term -> factor','term',1,'p_term','parser.py',67),
  ('factor -> NUMBER','factor',1,'p_factor_number','parser.py',78),
  ('factor -> STRING','factor',1,'p_factor_string','parser.py',83),
  ('factor -> VERDADEIRO','factor',1,'p_factor_boolean','parser.py',88),
  ('factor -> FALSO','factor',1,'p_factor_boolean','parser.py',89),
  ('factor -> ID','factor',1,'p_factor_id','parser.py',94),
  ('condition -> expression comparison_operator expression','condition',3,'p_condition','parser.py',99),
  ('condition -> NOT condition','condition',2,'p_condition','parser.py',100),
  ('condition -> LPAREN condition RPAREN','condition',3,'p_condition','parser.py',101),
  ('comparison_operator -> EQUALS','comparison_operator',1,'p_comparison_operator','parser.py',123),
  ('comparison_operator -> NEQUALS','comparison_operator',1,'p_comparison_operator','parser.py',124),
  ('comparison_operator -> LT','comparison_operator',1,'p_comparison_operator','parser.py',125),
  ('comparison_operator -> GT','comparison_operator',1,'p_comparison_operator','parser.py',126),
  ('comparison_operator -> LE','comparison_operator',1,'p_comparison_operator','parser.py',127),
  ('comparison_operator -> GE','comparison_operator',1,'p_comparison_operator','parser.py',128),
  ('if_statement -> SE condition bloco optional_else','if_statement',4,'p_if_statement','parser.py',133),
  ('optional_else -> SENAO bloco','optional_else',2,'p_optional_else','parser.py',146),
  ('optional_else -> empty','optional_else',1,'p_optional_else','parser.py',147),
  ('while_loop -> ENQUANTO condition bloco','while_loop',3,'p_while_loop','parser.py',155),
  ('for_loop -> PARA ID ASSIGN expression ATE expression bloco','for_loop',7,'p_for_loop','parser.py',165),
  ('bloco -> LBRACE statements RBRACE','bloco',3,'p_bloco','parser.py',178),
  ('print_statement -> IMPRIME expression SEMICOLON','print_statement',3,'p_print_statement','parser.py',183),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',192),
]
