
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftEQNEleftLTLEGTGEleftPLUSMINUSleftTIMESDIVIDEASSIGN DIVIDE ELSE EQ GE GT IF LBRACE LE LPAREN LT MINUS NAME NE NUMBER PLUS PRINT RBRACE RPAREN SEMICOLON STRING TIMES WHILEprogram : statementsstatements : statements statementstatements : statement\n    statement : assignment SEMICOLON\n              | if_statement\n              | block_statement\n              | print_statement SEMICOLON\n    assignment : NAME ASSIGN expression\n    if_statement : IF LPAREN expression RPAREN block_statement\n                 | IF LPAREN expression RPAREN block_statement ELSE block_statement\n    block_statement : LBRACE statements RBRACEprint_statement : PRINT LPAREN expression RPAREN\n    expression : expression PLUS expression\n               | expression MINUS expression\n               | expression TIMES expression\n               | expression DIVIDE expression\n               | expression EQ expression\n               | expression NE expression\n               | expression LT expression\n               | expression LE expression\n               | expression GT expression\n               | expression GE expression\n    expression : factorfactor : NUMBERfactor : NAMEfactor : STRINGfactor : LPAREN expression RPARENfactor : MINUS factor'
    
_lr_action_items = {'NAME':([0,2,3,5,6,10,12,13,14,15,16,17,18,21,25,27,29,30,31,32,33,34,35,36,37,38,54,56,],[8,8,-3,-5,-6,8,-2,-4,-7,19,19,8,19,19,19,-11,19,19,19,19,19,19,19,19,19,19,-9,-10,]),'IF':([0,2,3,5,6,10,12,13,14,17,27,54,56,],[9,9,-3,-5,-6,9,-2,-4,-7,9,-11,-9,-10,]),'LBRACE':([0,2,3,5,6,10,12,13,14,17,27,41,54,55,56,],[10,10,-3,-5,-6,10,-2,-4,-7,10,-11,10,-9,10,-10,]),'PRINT':([0,2,3,5,6,10,12,13,14,17,27,54,56,],[11,11,-3,-5,-6,11,-2,-4,-7,11,-11,-9,-10,]),'$end':([1,2,3,5,6,12,13,14,27,54,56,],[0,-1,-3,-5,-6,-2,-4,-7,-11,-9,-10,]),'RBRACE':([3,5,6,12,13,14,17,27,54,56,],[-3,-5,-6,-2,-4,-7,27,-11,-9,-10,]),'SEMICOLON':([4,7,19,20,22,23,24,39,42,43,44,45,46,47,48,49,50,51,52,53,],[13,14,-25,-8,-23,-24,-26,-28,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-27,]),'ASSIGN':([8,],[15,]),'LPAREN':([9,11,15,16,18,21,25,29,30,31,32,33,34,35,36,37,38,],[16,18,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'NUMBER':([15,16,18,21,25,29,30,31,32,33,34,35,36,37,38,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'STRING':([15,16,18,21,25,29,30,31,32,33,34,35,36,37,38,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'MINUS':([15,16,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,],[21,21,21,-25,30,21,-23,-24,-26,21,30,30,21,21,21,21,21,21,21,21,21,21,-28,30,-13,-14,-15,-16,30,30,30,30,30,30,-27,]),'PLUS':([19,20,22,23,24,26,28,39,40,43,44,45,46,47,48,49,50,51,52,53,],[-25,29,-23,-24,-26,29,29,-28,29,-13,-14,-15,-16,29,29,29,29,29,29,-27,]),'TIMES':([19,20,22,23,24,26,28,39,40,43,44,45,46,47,48,49,50,51,52,53,],[-25,31,-23,-24,-26,31,31,-28,31,31,31,-15,-16,31,31,31,31,31,31,-27,]),'DIVIDE':([19,20,22,23,24,26,28,39,40,43,44,45,46,47,48,49,50,51,52,53,],[-25,32,-23,-24,-26,32,32,-28,32,32,32,-15,-16,32,32,32,32,32,32,-27,]),'EQ':([19,20,22,23,24,26,28,39,40,43,44,45,46,47,48,49,50,51,52,53,],[-25,33,-23,-24,-26,33,33,-28,33,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-27,]),'NE':([19,20,22,23,24,26,28,39,40,43,44,45,46,47,48,49,50,51,52,53,],[-25,34,-23,-24,-26,34,34,-28,34,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-27,]),'LT':([19,20,22,23,24,26,28,39,40,43,44,45,46,47,48,49,50,51,52,53,],[-25,35,-23,-24,-26,35,35,-28,35,-13,-14,-15,-16,35,35,-19,-20,-21,-22,-27,]),'LE':([19,20,22,23,24,26,28,39,40,43,44,45,46,47,48,49,50,51,52,53,],[-25,36,-23,-24,-26,36,36,-28,36,-13,-14,-15,-16,36,36,-19,-20,-21,-22,-27,]),'GT':([19,20,22,23,24,26,28,39,40,43,44,45,46,47,48,49,50,51,52,53,],[-25,37,-23,-24,-26,37,37,-28,37,-13,-14,-15,-16,37,37,-19,-20,-21,-22,-27,]),'GE':([19,20,22,23,24,26,28,39,40,43,44,45,46,47,48,49,50,51,52,53,],[-25,38,-23,-24,-26,38,38,-28,38,-13,-14,-15,-16,38,38,-19,-20,-21,-22,-27,]),'RPAREN':([19,22,23,24,26,28,39,40,43,44,45,46,47,48,49,50,51,52,53,],[-25,-23,-24,-26,41,42,-28,53,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-27,]),'ELSE':([27,54,],[-11,55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,10,],[2,17,]),'statement':([0,2,10,17,],[3,12,3,12,]),'assignment':([0,2,10,17,],[4,4,4,4,]),'if_statement':([0,2,10,17,],[5,5,5,5,]),'block_statement':([0,2,10,17,41,55,],[6,6,6,6,54,56,]),'print_statement':([0,2,10,17,],[7,7,7,7,]),'expression':([15,16,18,25,29,30,31,32,33,34,35,36,37,38,],[20,26,28,40,43,44,45,46,47,48,49,50,51,52,]),'factor':([15,16,18,21,25,29,30,31,32,33,34,35,36,37,38,],[22,22,22,39,22,22,22,22,22,22,22,22,22,22,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','pls_gpt_work.py',101),
  ('statements -> statements statement','statements',2,'p_statements_multiple','pls_gpt_work.py',106),
  ('statements -> statement','statements',1,'p_statements_single','pls_gpt_work.py',111),
  ('statement -> assignment SEMICOLON','statement',2,'p_statement','pls_gpt_work.py',117),
  ('statement -> if_statement','statement',1,'p_statement','pls_gpt_work.py',118),
  ('statement -> block_statement','statement',1,'p_statement','pls_gpt_work.py',119),
  ('statement -> print_statement SEMICOLON','statement',2,'p_statement','pls_gpt_work.py',120),
  ('assignment -> NAME ASSIGN expression','assignment',3,'p_assignment','pls_gpt_work.py',126),
  ('if_statement -> IF LPAREN expression RPAREN block_statement','if_statement',5,'p_if_statement','pls_gpt_work.py',132),
  ('if_statement -> IF LPAREN expression RPAREN block_statement ELSE block_statement','if_statement',7,'p_if_statement','pls_gpt_work.py',133),
  ('block_statement -> LBRACE statements RBRACE','block_statement',3,'p_block_statement','pls_gpt_work.py',145),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print_statement','pls_gpt_work.py',150),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','pls_gpt_work.py',156),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','pls_gpt_work.py',157),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','pls_gpt_work.py',158),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','pls_gpt_work.py',159),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','pls_gpt_work.py',160),
  ('expression -> expression NE expression','expression',3,'p_expression_binop','pls_gpt_work.py',161),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','pls_gpt_work.py',162),
  ('expression -> expression LE expression','expression',3,'p_expression_binop','pls_gpt_work.py',163),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','pls_gpt_work.py',164),
  ('expression -> expression GE expression','expression',3,'p_expression_binop','pls_gpt_work.py',165),
  ('expression -> factor','expression',1,'p_expression_factor','pls_gpt_work.py',171),
  ('factor -> NUMBER','factor',1,'p_factor_number','pls_gpt_work.py',176),
  ('factor -> NAME','factor',1,'p_factor_name','pls_gpt_work.py',181),
  ('factor -> STRING','factor',1,'p_factor_string','pls_gpt_work.py',186),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_grouped','pls_gpt_work.py',191),
  ('factor -> MINUS factor','factor',2,'p_factor_unary','pls_gpt_work.py',196),
]
